# Enable Gzip
gzip  on;
gzip_http_version 1.0;
gzip_comp_level 2;
gzip_min_length 1100;
gzip_buffers     4 8k;
gzip_proxied any;
gzip_types
  # text/html is always compressed by HttpGzipModule
  text/css
  text/javascript
  text/xml
  text/plain
  text/x-component
  application/javascript
  application/json
  application/xml
  application/rss+xml
  font/truetype
  font/opentype
  application/vnd.ms-fontobject
  image/svg+xml;

gzip_static on;
gzip_proxied        expired no-cache no-store private auth;
gzip_disable        "MSIE [1-6]\.";
gzip_vary           on;


# Enable upgrading of connection (and websocket proxying) depending on the
# presence of the upgrade field in the client request header
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}


# the upstream component nginx needs to connect to
upstream django {
    server <%= ENV['OPENSHIFT_NGINX_IP'] %>:16001; # for a web port socket (we'll use this first)
}

upstream ws_server {
    server <%= ENV['OPENSHIFT_NGINX_IP'] %>:16002 fail_timeout=0;
}

server {
    listen  <%= ENV['OPENSHIFT_NGINX_IP'] %>:<%= ENV['OPENSHIFT_NGINX_PORT'] %>;
    root    <%= ENV['OPENSHIFT_REPO_DIR'] %>public;

    real_ip_header      X-Forwarded-For;

    location /main {
        index  index.html index.htm;
    }
    
    location /static {
        alias <%= ENV['OPENSHIFT_REPO_DIR'] %>wsgi/static; # your Django project's static files - amend as required
    }

    location / {
        uwsgi_pass  django;
        include     <%= ENV['OPENSHIFT_NGINX_DIR'] %>version/conf/uwsgi_params;
    }

    location /ws {
           proxy_pass http://ws_server;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "upgrade";
    }
}
